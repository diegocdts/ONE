Scenario.simulateConnections = true
Scenario.updateInterval = 0.5
Scenario.endTime = 7200

Events.nrof = 1
Events1.class = IntraCommunityMessageEvent
Events1.interval = 1
Events1.size = 25k, 50k
Events1.prefix = M

Events1.hosts = 0, 199
Events1.tohosts = 0, 199
Scenario.name = helsinki
Group.msgTtl = 40

Report.nrofReports = 4 
Report.warmup = 0
Report.reportDir = reports/intra/helsinki/
Report.report1 = EventLogReport
Report.report2 = CreatedMessagesReport
Report.report3 = DeliveredMessagesReport
Report.report4 = BufferOccupancyReport

btInterface.type = SimpleBroadcastInterface
btInterface.transmitSpeed = 125k
btInterface.transmitRange = 100

Scenario.nrofHostGroups = 1

Group.movementModel = ShortestPathMapBasedMovement

Group.router = DecisionEngineRouter
DecisionEngineRouter.decisionEngine = periodic_community.PCUIntraRouter


Group.nrofInterfaces = 1
Group.interface1 = btInterface
Group.bufferSize = 2G

Group.waitTime = 30, 60
Group.speed = 0.5, 1.5

Group.nrofHosts = 200

# group1 (pedestrians) specific settings
Group1.groupID = p

## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 4500, 3400
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 4

MapBasedMovement.mapFile1 = data/roads.wkt
MapBasedMovement.mapFile2 = data/main_roads.wkt
MapBasedMovement.mapFile3 = data/pedestrian_paths.wkt
MapBasedMovement.mapFile4 = data/shops.wkt

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$